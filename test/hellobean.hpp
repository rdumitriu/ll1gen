//
// GENERATED by ll1gen : Do not modify (or on your own risk)
//
#ifndef _LL1GEN_HELLOBEAN_HPP_
#define _LL1GEN_HELLOBEAN_HPP_

#include "json_utils.hpp"

//ll1gen::include_begin

//ll1gen::include_end

namespace helloworld { 

class HelloBean {
public:
    //ll1gen::constructor_begin

    //ll1gen::constructor_end
    HelloBean() {}
    ~HelloBean() {}

#ifndef LL1GEN_DISABLE_STANDARD_GETTERS
    //ll1gen::getters_begin

    
    std::string get_fname() const { return _fname; }

    void set_fname( const std::string & __val) { _fname = __val; }



    std::string get_lname() const { return _lname; }

    void set_lname( const std::string & __val) { _lname = __val; }



    unsigned int get_age() const { return _age; }

    void set_age(  unsigned int  __val) { _age = __val; }


//ll1gen::getters_end
#endif

#ifndef LL1GEN_DISABLE_REFERENCE_GETTERS
    //ll1gen::ref_getters_begin

        std::string & fname() { return _fname; }


    std::string & lname() { return _lname; }


    unsigned int & age() { return _age; }


//ll1gen::ref_getters_end
#endif

    friend std::ostream& operator<< (std::ostream& __stream, const HelloBean& __bean);
    friend std::istream& operator>> (std::istream& __stream, HelloBean& __bean);
private:
    //ll1gen::field_decl_begin

    std::string _fname;
std::string _lname;
unsigned int _age;
//ll1gen::field_decl_end
};

std::ostream& operator<< (std::ostream& __stream, const HelloBean& __bean) {
    __stream << "{";
    //ll1gen::field_ostream_begin

        __stream << "\"fname\":\"" << ll1gen::json::encodeJsonString(__bean._fname) << "\"";


__stream << ",";
    __stream << "\"lname\":\"" << ll1gen::json::encodeJsonString(__bean._lname) << "\"";


__stream << ",";
    __stream << "\"age\":" << __bean._age;


//ll1gen::field_ostream_end
    __stream << "}";
    return __stream;
}

std::istream& operator>> (std::istream& __stream, HelloBean& __bean) {
    char __startObjectMrk = ll1gen::json::lookUpAndEat(__stream, "{n");
    if(__startObjectMrk == 'n') {
        ll1gen::json::lookUpTokenRemainder(__stream, __startObjectMrk, "null");
        return __stream;
    }
    for(unsigned int __i = 0; __i < 3; ++__i) {
        ll1gen::json::lookUpAndEat(__stream, "\"");
        std::string __propertyName = ll1gen::json::lookUp(__stream, "\"");
        ll1gen::json::lookUpAndEat(__stream, ":");

        //ll1gen::field_istream_begin

            if(__propertyName == "fname") {
        if(!ll1gen::json::parseString(__stream, __bean._fname)) {
            __bean._fname = "";
        }
    }

else
    if(__propertyName == "lname") {
        if(!ll1gen::json::parseString(__stream, __bean._lname)) {
            __bean._lname = "";
        }
    }

else
    if(__propertyName == "age" && !ll1gen::json::lookUpNull(__stream)) {
        __stream >> __bean._age;
    }

//ll1gen::field_istream_end

        if('{' == ll1gen::json::lookUpAndEat(__stream, "},")) {
            break;
        }
    }
    return __stream;
}

} 

#endif
